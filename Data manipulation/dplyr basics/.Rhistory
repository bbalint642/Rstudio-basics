library(dplyr)
library(hflights)
install.packages("hflights")
library(hflights)
#explore data
data(hflights)
head(hflights)
#' convert to local data frame
flights <- tbl_df(hflights)
View(flights)
#' convert to local data frame
flights <- as_tibble(hflights)
head(hflights)
flights
flights
print(flights, n=20)
#' convert to a normal data frame to see all of the columns
data.frame(head(flights))
#' convert to a normal data frame to see all of the columns
data.frame(head(flights))
#base R megkozelites :
flights[flights$Month==1 & flights$DayofMonth==1, ]
#base R megkozelites :
flights[flights$Month==1 & flights$DayofMonth==1 ]
#base R megkozelites :
flights[flights$Month==1 & flights$DayofMonth==1, ]
#dplyr megkozelites:
filter(flights, Month==1, DayofMonth==1)
#base R megkozelites:
flights[flights$Month==1 & flights$DayofMonth==1, ]
#dplyr megkozelites:
filter(flights, Month==1, DayofMonth==1)
filter(flights, UniqueCarrier=="AA" | UniqueCarrier=="UA")
filter(flights, UniqueCarrier=="AA" | UniqueCarrier=="UA", n=20)
filter(flights, UniqueCarrier=="AA" | UniqueCarrier=="UA", n=20,)
filter(flights, UniqueCarrier=="AA" | UniqueCarrier=="UA")
# hasznalhatunk %in% operatort
filter(flights, UniqueCarrier %in% c("AA", "UA"))
# base r megkozelites:
flights[, c("DepTime", "ArrTime", "FlightNum")]
# dplyr megkozelites:
select(flights, DepTime, ArrTime, FlightNum)
select(flights, Year:Month, contains("Num"), contains("Time"))
filter(select(flights, UniqueCarrier, DepDelay), DepDelay > 60)
#' pipe
flights %>%
select(UniqueCarrier, DepDelay) %>%
filter(DepDelay > 60)
## Arrange: sorok ujra rendezese ----
#base r megoldas:
flights[order(flights$DepDelay), c("UniqueCarrier", "DepDelay")]
#dplyr megoldas:
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
#dplyr megoldas:
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(-DepDelay)
#dplyr megoldas:
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
# desc vagy arrange(-DepDelay) csokkeno sorrendhez
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(desc(DepDelay))
#base r:
flights$Speed <- flights$Distance / flights$AirTime*60
flights[, c("Distance", "AirTime", "Speed")]
flights %>%
select(Distance, AirTime) %>%
mutate(Speed = Distance / AirTime*60)
# uj valtozo tarolasa:
flights <- flights %>% mutate(Speed = Distance / AirTime*60)
View(flights)
#base r:
head(with(flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE)))
head(aggregate(ArrDelay ~ Dest, flights, mean))
#dplyr + pipe:
flights %>%
group_by(Dest) %>%
summarise(avg_delay = mean(ArrDelay, na.rm = TRUE))
# Summarise_each(): tobb oszlop osszefoglalasa egyszerre
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(mean), Cancelled, Diverted)
# Summarise_each(): tobb oszlop osszefoglalasa egyszerre
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(mean, Cancelled, Diverted)
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(min(., na.rm = TRUE), max(., na.rm = TRUE),
matches("Delay"))
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm=TRUE), max(., na.rm = TRUE)),
matches("Delay"))
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm=TRUE), max(., na.rm = TRUE)),
matches("Delay"))
# az ev minden napjara megszamoljuk, hogy aznap hany jarat volt osszesen, es ezt csokkeno sorrendbe rendezzuk
flights %>%
group_by(Month, DayofMonth) %>%
summarise(flight_count = n()) %>%
arrange(desc(flight_count))
